name: build
on: [pull_request, push]

permissions:
  contents: read

jobs:
  build:
    strategy:
      matrix:
        # Use these Java versions
        java: [
          17,    # Current Java LTS & minimum supported by Minecraft
          21,    # Latest LTS (optional - add if you want to test on newer Java)
        ]
        # and run on both Linux and Windows
        os: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        
      - name: validate gradle wrapper
        uses: gradle/wrapper-validation-action@v3
        
      - name: setup jdk ${{ matrix.java }}
        uses: actions/setup-java@v4
        with:
          java-version: ${{ matrix.java }}
          distribution: 'temurin'
          
      - name: setup gradle
        uses: gradle/actions/setup-gradle@v3
        
      - name: make gradle wrapper executable
        if: ${{ runner.os != 'Windows' }}
        run: chmod +x ./gradlew
        
      - name: build
        run: ./gradlew build
        
      - name: capture build artifacts
        if: ${{ runner.os == 'Linux' && matrix.java == '17' }} # Only upload artifacts built from latest java on one OS
        uses: actions/upload-artifact@v4
        with:
          name: Artifacts
          path: build/libs/

  # Optional: Add a release job that runs when you push tags
  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: checkout repository
        uses: actions/checkout@v4
        
      - name: download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: Artifacts
          path: build/libs/
          
      - name: create release
        uses: softprops/action-gh-release@v2
        with:
          files: build/libs/*.jar
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}